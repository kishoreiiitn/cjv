webpackHotUpdate_N_E("pages/playground",{

/***/ "../flowjv-react/dist/form/index.js":
/*!******************************************!*\
  !*** ../flowjv-react/dist/form/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FlowJVForm = exports.flowJVContext = void 0;\nvar flowjv_1 = __webpack_require__(/*! flowjv */ \"../flowjv/dist/index.js\");\nvar compile_1 = __webpack_require__(/*! flowjv/dist/jsonflow/compile */ \"../flowjv/dist/jsonflow/compile.js\");\nvar immutable_1 = __webpack_require__(/*! flowjv/dist/helper/immutable */ \"../flowjv/dist/helper/immutable.js\");\nvar react_1 = __importStar(__webpack_require__(/*! react */ \"../../node_modules/react/index.js\"));\nexports.flowJVContext = react_1.default.createContext({});\nfunction FlowJVForm(_a) {\n    var _b = _a.initialData, initialData = _b === void 0 ? {} : _b, _c = _a.context, initialContext = _c === void 0 ? {} : _c, flowConfig = _a.flowConfig, schema = _a.schema, className = _a.className, onSubmit = _a.onSubmit, children = _a.children, renderMap = _a.renderMap, schemaUI = _a.schemaUI;\n    var data = react_1.useRef(initialData);\n    var context = react_1.useRef(initialContext);\n    var blocks = react_1.useMemo(function () { return compile_1.compileSchema(schema); }, []);\n    var allSubscribers = react_1.useRef(new Set());\n    var subscribers = react_1.useRef({ data: {} });\n    var validationSubscribers = react_1.useRef(new Set());\n    var formValidation = react_1.useRef();\n    var triggerValidation = react_1.useCallback(function () {\n        var _a;\n        var result = flowjv_1.validateJSONFlow(schema, {\n            data: data.current,\n            context: context.current,\n        }, { aggressive: false });\n        if (result.isValid !== ((_a = formValidation.current) === null || _a === void 0 ? void 0 : _a.isValid)) {\n            validationSubscribers.current.forEach(function (func) { return func(result); });\n        }\n        formValidation.current = result;\n    }, []);\n    var triggerSubscriptions = react_1.useCallback(function (paths) {\n        paths.forEach(function (path) {\n            var _a;\n            (_a = subscribers.current.data[path.join(\".\")]) === null || _a === void 0 ? void 0 : _a.forEach(function (func) {\n                return func({ data: data.current, context: context.current });\n            });\n        });\n        allSubscribers.current.forEach(function (func) {\n            return func({ data: data.current, context: context.current });\n        });\n    }, []);\n    react_1.useEffect(function () {\n        // This is for FormSpy.\n        triggerSubscriptions([]);\n    }, []);\n    var registered = react_1.useRef({});\n    var formContext = {\n        schema: schema,\n        getBlock: function (key) {\n            if (key.length === 0) {\n                var value = {\n                    deps: [],\n                    items: [\n                        {\n                            deps: [],\n                            condPath: [],\n                            schema: schema,\n                        },\n                    ],\n                };\n                return value;\n            }\n            return blocks[key.map(function (v) { return (typeof v === \"number\" ? \"$\" : v); }).join(\".\")];\n        },\n        register: function (key, _a) {\n            var setFocus = _a.setFocus, setTouch = _a.setTouch;\n            if (!registered.current)\n                return;\n            registered.current[key.join(\".\")] = __assign(__assign({}, registered.current), { setFocus: setFocus,\n                setTouch: setTouch });\n        },\n        getValue: function (key) {\n            return immutable_1.get(data.current, key);\n        },\n        setValue: function (key, value) {\n            data.current = immutable_1.set(data.current, key, value);\n            triggerValidation();\n            triggerSubscriptions([key]);\n        },\n        deleteValue: function (key) {\n            data.current = immutable_1.unset(data.current, key);\n            triggerValidation();\n        },\n        insertIndex: function (key, value) {\n            data.current = immutable_1.insertIndex(data.current, key, value);\n            triggerValidation();\n            key.pop();\n            triggerSubscriptions([key]);\n        },\n        deleteIndex: function (key) {\n            data.current = immutable_1.unset(data.current, key);\n            triggerValidation();\n            key.pop();\n            triggerSubscriptions([key]);\n        },\n        subscribeValidation: function (func) {\n            var validation = formValidation.current;\n            if (validation) {\n                func(validation);\n            }\n            validationSubscribers.current.add(func);\n            return function () {\n                validationSubscribers.current.delete(func);\n            };\n        },\n        subscribeData: function (deps, func) {\n            if (deps === null) {\n                // Subscribe all.\n                allSubscribers.current.add(func);\n                return;\n            }\n            var d = deps;\n            func({ data: data.current, context: context.current });\n            d.forEach(function (path) {\n                var _a;\n                if (!subscribers.current.data[path]) {\n                    subscribers.current.data[path] = new Set();\n                }\n                (_a = subscribers.current.data[path]) === null || _a === void 0 ? void 0 : _a.add(func);\n            });\n            return function () {\n                d.forEach(function (path) {\n                    var _a;\n                    (_a = subscribers.current.data[path]) === null || _a === void 0 ? void 0 : _a.delete(func);\n                });\n            };\n        },\n        renderSchema: function (props) {\n            var path = props.path.join(\".\");\n            if (renderMap === null || renderMap === void 0 ? void 0 : renderMap[path]) {\n                var result = renderMap[path](props);\n                if (result !== null)\n                    return result;\n            }\n            if (schemaUI) {\n                var result = schemaUI(props);\n                if (result !== null)\n                    return result;\n            }\n            // Check for renderMap\n            return flowConfig(props);\n        },\n    };\n    react_1.useEffect(function () {\n        // Call validation the first time.\n        triggerValidation();\n    }, []);\n    return (react_1.default.createElement(exports.flowJVContext.Provider, { value: formContext },\n        react_1.default.createElement(\"form\", { className: className, onSubmit: function (e) {\n                var _a, _b, _c;\n                e.preventDefault();\n                // touchAll\n                if (registered.current) {\n                    Object.entries(registered.current).forEach(function (_a) {\n                        var _b = __read(_a, 2), _ = _b[0], value = _b[1];\n                        return value === null || value === void 0 ? void 0 : value.setTouch(true);\n                    });\n                }\n                var validationResult = formValidation.current;\n                // Focus on the first error field.\n                if (!(validationResult === null || validationResult === void 0 ? void 0 : validationResult.isValid)) {\n                    var errorKey = (_a = validationResult === null || validationResult === void 0 ? void 0 : validationResult.errors[0]) === null || _a === void 0 ? void 0 : _a.key.join(\".\");\n                    if (errorKey) {\n                        (_c = (_b = registered.current) === null || _b === void 0 ? void 0 : _b[errorKey]) === null || _c === void 0 ? void 0 : _c.setFocus();\n                    }\n                }\n                onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit({\n                    isValid: !!(validationResult === null || validationResult === void 0 ? void 0 : validationResult.isValid),\n                    data: data.current,\n                    context: context.current,\n                });\n            } }, children)));\n}\nexports.FlowJVForm = FlowJVForm;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../flowjv-react/dist/form/index.js\n");

/***/ })

})